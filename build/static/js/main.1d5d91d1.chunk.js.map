{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","components/topNav.js","RegistrationForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","onClickdisabled","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","TopNav","RegistrationForm","doRegister","App","isLogggedIn","doLogoutt","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAae,MAVX,aAAe,oBACXA,YAAiBC,KAAM,CAEnBC,SAAS,EACTC,YAAY,EACZC,SAAU,M,eCaPC,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,aAAf,SACE,uBACIA,UAAU,QACVC,KAAMN,KAAKO,MAAMD,KACjBE,YAAaR,KAAKO,MAAMC,YACxBC,MAAOT,KAAKO,MAAME,MAClBC,SAAW,SAACC,GAAD,OAAO,EAAKJ,MAAMG,SAASC,EAAEC,OAAOH,gB,GAXlCI,IAAMC,WCmBhBC,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKV,UAAU,eAAf,SACE,wBACIA,UAAU,MACVW,gBAAiBhB,KAAKO,MAAMU,SAC5BC,QAAU,kBAAM,EAAKX,MAAMW,WAH/B,SAKSlB,KAAKO,MAAMY,a,GAXDN,IAAMC,WCyGlBM,E,kDAnGX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTlB,SAAU,GACVmB,SAAU,GACVC,gBAAgB,GALL,E,iDASnB,SAAcC,EAAUC,IACpBA,EAAMA,EAAIC,QACFC,OAAS,IAGjB3B,KAAK4B,SAAL,eACKJ,EAAWC,M,uBAIpB,WACIzB,KAAK4B,SAAS,CACVzB,SAAU,GACVmB,SAAU,GACVC,gBAAgB,M,4DAIxB,8BAAAM,EAAA,yDACS7B,KAAKqB,MAAMlB,SADpB,oDAISH,KAAKqB,MAAMC,SAJpB,wDAOItB,KAAK4B,SAAS,CACVL,gBAAgB,IARxB,kBAYwBO,MAAM,SAAU,CAC5BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhC,SAAUH,KAAKqB,MAAMlB,SACrBmB,SAAUtB,KAAKqB,MAAMC,aApBrC,cAYYc,EAZZ,iBAyB2BA,EAAIC,OAzB/B,SAyBYC,EAzBZ,SA0BsBA,EAAOC,SACjBC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAWmC,EAAOnC,UAGvBmC,IAA6B,IAAnBA,EAAOC,UACtBvC,KAAKyC,YACLC,MAAMJ,EAAOK,MAjCzB,kDAsCQC,QAAQC,IAAR,MACA7C,KAAKyC,YAvCb,0D,0EA2CA,WAAU,IAAD,OACL,OACI,sBAAKpC,UAAU,YAAf,kBAEI,cAAC,EAAD,CACIC,KAAK,OACLE,YAAY,WACZC,MAAOT,KAAKqB,MAAMlB,SAAWH,KAAKqB,MAAMlB,SAAW,GACnDO,SAAW,SAACe,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAGvD,cAAC,EAAD,CACInB,KAAK,WACLE,YAAY,WACZC,MAAOT,KAAKqB,MAAMC,SAAWtB,KAAKqB,MAAMC,SAAW,GACnDZ,SAAW,SAACe,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAGvD,cAAC,EAAD,CACIN,KAAK,QACLF,SAAUjB,KAAKqB,MAAME,eACrBL,QAAU,kBAAM,EAAK6B,oB,GA7FjBlC,IAAMC,WCSfkC,IC2FAC,E,kDAjGX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTlB,SAAU,GACVmB,SAAU,GACVC,gBAAgB,GALL,E,iDASnB,SAAcC,EAAUC,IACpBA,EAAMA,EAAIC,QACFC,OAAS,IAGjB3B,KAAK4B,SAAL,eACKJ,EAAWC,M,uBAIpB,WACIzB,KAAK4B,SAAS,CACVzB,SAAU,GACVmB,SAAU,GACVC,gBAAgB,M,+DAIxB,8BAAAM,EAAA,yDACS7B,KAAKqB,MAAMlB,SADpB,oDAISH,KAAKqB,MAAMC,SAJpB,wDAOItB,KAAK4B,SAAS,CACVL,gBAAgB,IARxB,kBAewBO,MAAM,YAAa,CAC/BC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhC,SAAUH,KAAKqB,MAAMlB,SACrBmB,SAAUtB,KAAKqB,MAAMC,aAvBrC,cAeYc,EAfZ,iBA4B2BA,EAAIC,OA5B/B,SA4BYC,EA5BZ,UA8BYtC,KAAKyC,YACLC,MAAMJ,EAAOK,MA/BzB,kDAoCQC,QAAQC,IAAR,MACA7C,KAAKyC,YArCb,0D,0EAyCA,WAAU,IAAD,OACL,OACI,sBAAKpC,UAAU,mBAAf,qBAEI,cAAC,EAAD,CACIC,KAAK,OACLE,YAAY,QACZC,MAAOT,KAAKqB,MAAMlB,SAAWH,KAAKqB,MAAMlB,SAAW,GACnDO,SAAW,SAACe,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAGvD,cAAC,EAAD,CACInB,KAAK,WACLE,YAAY,oBACZC,MAAOT,KAAKqB,MAAMC,SAAWtB,KAAKqB,MAAMC,SAAW,GACnDZ,SAAW,SAACe,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAGvD,cAAC,EAAD,CACIN,KAAK,WACLF,SAAUjB,KAAKqB,MAAME,eACrBL,QAAU,kBAAM,EAAKgC,uB,GA3FVrC,IAAMC,WCW/BqC,E,8MACJ,8BAAAtB,EAAA,+EAEoBC,MAAM,cAAe,CACjCC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAN1B,cAEQI,EAFR,gBAUuBA,EAAIC,OAV3B,QAUQC,EAVR,SAYkBA,EAAOC,SACnBC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAWmC,EAAOnC,WAI5BqC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,GApB7B,kDAyBIsC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,EA1B3B,0D,oHA8BA,8BAAA2B,EAAA,+EAGoBC,MAAM,UAAW,CAC7BC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAP1B,cAGQI,EAHR,gBAWuBA,EAAIC,OAX3B,QAWQC,EAXR,SAakBA,EAAOC,UACnBC,EAAUY,aAAc,EACxBZ,EAAUrC,SAAW,IAf3B,kDAoBIyC,QAAQC,IAAR,MApBJ,0D,0EAuBA,WAAU,IAAD,OACP,OAAIL,EAAUvC,QAEV,qBAAKI,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,uCAQAmC,EAAUtC,WAEV,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,qBACWmC,EAAUrC,SAEnB,cAAC,EAAD,CACEgB,KAAM,UACNF,UAAU,EACVC,QAAU,kBAAM,EAAKmC,oBAQ7B,sBAAKhD,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SAEE,cAAC,EAAD,MAGF,qBAAKA,UAAU,YAAf,SAEA,cAAC,EAAD,a,GA3FQQ,IAAMC,WAsGTwC,cAASH,GC5GTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d5d91d1.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={ (e) => this.props.onChange(e.target.value) }\r\n            />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button \r\n            className='btn'\r\n            onClickdisabled={this.props.disabled}\r\n            onClick={ () => this.props.onClick()}\r\n            >\r\n                {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SubmitButton;\r\n","import React        from 'react';\r\nimport InputField   from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore    from './stores/UserStore';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n                Login\r\n                <InputField \r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n\r\n                <InputField \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton \r\n                    text='Login'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n        }\r\n}\r\n\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\n\r\nfunction TopNav() {\r\n    return (\r\n        <div className=\"topnav-banner\">\r\n            <div className=\"left-align\">\r\n                <h1>RETIRE ABROAD CLUB</h1>\r\n            </div>\r\n            <div className=\"right-align\">\r\n                <button>About Retire Abroad Club</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopNav;","import React        from 'react';\r\nimport InputField   from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore    from './stores/UserStore';\r\n\r\n\r\n\r\nclass RegistrationForm extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doRegister() {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        // this.state.password = bcrypt.hashSync(this.state.password, 9);\r\n        // console.log(this.state.password)\r\n\r\n        try {\r\n            let res = await fetch('/register', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registrationForm\">\r\n                Register\r\n                <InputField \r\n                    type='text'\r\n                    placeholder='Email'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n\r\n                <InputField \r\n                    type='password'\r\n                    placeholder='Choose a Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton \r\n                    text='Register'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doRegister() }\r\n                />\r\n            </div>\r\n        );\r\n        }\r\n}\r\n\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './App.css';\r\nimport UserStore from './stores/UserStore';\r\nimport LoginForm from './LoginForm';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport TopNav from './components/topNav';\r\nimport RegistrationForm from './RegistrationForm';\r\n\r\n\r\n// function App(){\r\n//   return (\r\n//     <TopNav />\r\n    \r\n\r\n//   );\r\n// }\r\nclass App extends React.Component {\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await fetch('/isLoggedIn', {\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n      let result = await res.json();\r\n      \r\n      if (result && result.success) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n    }\r\n\r\n    catch(e) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  async doLogoutt() {\r\n    try {\r\n\r\n      let res = await fetch('/logout', {\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n      let result = await res.json();\r\n      \r\n      if (result && result.success) {\r\n        UserStore.isLogggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n    }\r\n\r\n    catch(e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  render() {\r\n    if (UserStore.loading) {\r\n      return(\r\n        <div className=\"app\">\r\n          <div className='container'>\r\n            Loading, please wait...\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else {\r\n      if (UserStore.isLoggedIn){\r\n        return(\r\n          <div className=\"app\">\r\n            <div className='container'>\r\n              Welcome {UserStore.username}\r\n\r\n              <SubmitButton \r\n                text={'Log out'}\r\n                disabled={false}\r\n                onClick={ () => this.doLogoutt()}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }\r\n      return (\r\n        <div className=\"app\">\r\n          <div className='container'>\r\n\r\n            <LoginForm />\r\n          </div>\r\n\r\n          <div className='container'>\r\n\r\n          <RegistrationForm />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}